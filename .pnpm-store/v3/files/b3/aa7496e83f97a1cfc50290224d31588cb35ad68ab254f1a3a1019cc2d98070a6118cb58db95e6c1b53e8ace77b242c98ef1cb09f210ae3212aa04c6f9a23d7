/*! @author Huan Luo <dukeluo@outlook.com> (https://shaiwang.life) */
import{posix as e,join as t,sep as n}from"path";import a from"micromatch";import o from"is-glob";const i='The naming pattern object "{{ value }}" does not appear to be an Object type, please double-check it and try again',r='There is an invalid pattern "{{ value }}", please double-check it and try again',s=e=>`https://github.com/dukeluo/eslint-plugin-check-file/blob/main/docs/rules/${e}.md`,l=/^<(\d+)>$/,d=/^[A-Za-z]:\\/,c=e=>"[object Object]"===Object.prototype.toString.call(e),p=e=>null==e,m=e=>""===e||(e=>null!=e&&e.length>=0&&"[object Array]"===Object.prototype.toString.call(e))(e)&&0===e.length||c(e)&&0===Object.keys(e).length,f=(...e)=>t=>e.reduce(((e,t)=>t(e)),t),g=f(m,(e=>!e)),h=t=>e.basename(t),u=t=>e.join(e.dirname(t),e.sep),y=(e,t=!1)=>e.substring(0,t?e.indexOf("."):e.lastIndexOf(".")),b=t=>t.split(e.sep).filter(g),v=t=>{const n=b(t);let a=[];for(let t=0;t<n.length;t++)n.slice(t).reduce(((t,n,o)=>{const i=e.join(t,n,e.sep);return o>=1&&a.push(i),i}),"");return a.unshift(e.join(n[0],e.sep)),a},P=t=>t.split(n).join(e.sep),j=e=>e.replace(d,""),A=e=>{const a=(o=e.physicalFilename||e.getPhysicalFilename(),i=e.cwd||e.getCwd(),o.replace(t(i,n),""));var o,i;return f(j,P)(a)},M="+([a-z])*([a-z0-9])*([A-Z]*([a-z0-9]))",x="+([a-z])*([a-z0-9])*(-+([a-z0-9]))";var O=Object.freeze({__proto__:null,CAMEL_CASE:M,FLAT_CASE:"+([a-z0-9])",KEBAB_CASE:x,PASCAL_CASE:"*([A-Z]*([a-z0-9]))",SCREAMING_SNAKE_CASE:"+([A-Z])*([A-Z0-9])*(_+([A-Z0-9]))",SNAKE_CASE:"+([a-z])*([a-z0-9])*(_+([a-z0-9]))"});const _=([e,t],n)=>{const o=a.capture(e,n);if(p(o))return[e,t];const i=[...t.matchAll(new RegExp(l,"g"))];if(m(i))return[e,t];const r=i.reduce(((n,a)=>{const i=+a[1];if(p(o[i]))throw{type:"invalidPrefinedMatch",payload:{namingPattern:t,filenamePattern:e}};return n.replace(a[0],o[i])}),t);return[e,r]},E=(e,t,n,o)=>a.isMatch(e,t)?n&&o&&a.isMatch(n,O[o]||o)?void 0:{path:e,pattern:o}:void 0,k=`@(${x}|${`\\[${M}\\]`}|${`\\[...${M}\\]`}|${`\\[\\[...${M}\\]\\]`}|${`\\(${x}\\)`}|${`\\@${x}`}|${`\\_${x}`})`;var T=Object.freeze({__proto__:null,NEXT_JS_APP_ROUTER_CASE:k});const $=(e,t,n)=>{if(!c(e))return{type:"invalidObject",payload:e};for(const[a,o]of Object.entries(e)){if(!t(a))return{type:"invalidPattern",payload:a};if(!n(o))return{type:"invalidPattern",payload:o}}},z=e=>Object.keys(O).includes(e),S=o,I=e=>S(e)||z(e)||l.test(e),C=e=>S(e)||z(e)||(e=>Object.keys(T).includes(e))(e);var w={meta:{type:"layout",docs:{description:"The filename should be blocklisted",category:"Layout & Formatting",recommended:!1,url:s("filename-blocklist")},fixable:null,schema:[{additionalProperties:{type:"string"}},{type:"object",properties:{errorMessage:{type:"string"}}}],messages:{invalidObject:i,invalidPattern:r,noMatch:'The filename "{{ filename }}" matches the blocklisted "{{ blockListPattern }}" pattern, use a pattern like "{{ suggestion }}" instead'}},create:e=>({Program:t=>{const n=e.options[0],a=e.options[1]?.errorMessage??"",o=$(n,S,m(a)?S:()=>!0);if(o)return void e.report({node:t,messageId:o.type,data:{value:o.payload}});const i=A(e),r=h(i);for(const[o,s]of Object.entries(n)){if(E(i,o)||E(r,o))return void(g(a)?e.report({node:t,message:a,data:{target:r,pattern:o}}):e.report({node:t,messageId:"noMatch",data:{filename:r,blockListPattern:o,suggestion:s}}))}}})},L={meta:{type:"layout",docs:{description:"The filename should follow the filename naming convention",category:"Layout & Formatting",recommended:!1,url:s("filename-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}},{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"},errorMessage:{type:"string"}}}],messages:{invalidObject:i,invalidPattern:r,invalidPrefinedMatch:'The prefined match "{{ namingPattern }}" is not found in the pattern "{{ filenamePattern }}", please double-check it and try again',noMatch:'The filename "{{ filename }}" does not match the "{{ originalNamingPattern }}" pattern'}},create:e=>({Program:t=>{const n=e.options[0],a=$(n,S,I);if(a)return void e.report({node:t,messageId:a.type,data:{value:a.payload}});const o=A(e),i=h(o),r=e.options[1]?.ignoreMiddleExtensions??!1,s=e.options[1]?.errorMessage??"";for(const[l,d]of Object.entries(n))try{const[e,t]=_([l,d],o);if(E(o,e,y(i,r),t))throw{type:"noMatch",payload:{filename:i,originalNamingPattern:d}}}catch(a){g(s)&&"noMatch"===a.type?e.report({node:t,message:s,data:{target:a.payload.filename,pattern:a.payload.originalNamingPattern}}):e.report({node:t,messageId:a.type,data:a.payload})}}})},F={meta:{type:"layout",docs:{description:"The folder should match the naming pattern specified by its file",category:"Layout & Formatting",recommended:!1,url:s("folder-match-with-fex")},fixable:null,schema:[{additionalProperties:{type:"string"}}],messages:{invalidObject:i,invalidPattern:r,noMatch:'The folder of the file "{{ filenameWithPath }}" does not match the "{{ folderPattern }}" pattern'}},create:e=>({Program:t=>{const n=e.options[0],a=$(n,S,S);if(a)return void e.report({node:t,messageId:a.type,data:{value:a.payload}});const o=A(e),i=h(o),r=u(o);for(const[a,s]of Object.entries(n)){if(E(i,a,r,s))return void e.report({node:t,messageId:"noMatch",data:{filenameWithPath:o,folderPattern:s}})}}})},N={meta:{type:"layout",docs:{description:"The folder should follow the folder naming convention",category:"Layout & Formatting",recommended:!1,url:s("folder-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}}],messages:{invalidObject:i,invalidPattern:r,noMatch:'The folder "{{ folder }}" does not match the "{{ namingPattern }}" pattern'}},create:e=>({Program:t=>{const n=e.options[0],o=$(n,S,C);if(o)return void e.report({node:t,messageId:o.type,data:{value:o.payload}});const i=A(e),r=u(i);for(const[o,i]of Object.entries(n))if(a.isMatch(r,o,{contains:!0}))for(const n of v(r)){const r=a.capture(o,n,{dot:!0});if(p(r))continue;const s=r.filter(g).reduce(((e,t)=>e.concat(b(t))),[]);for(const n of s)if(!a.isMatch(n,O[i]||T[i]||i))return void e.report({node:t,messageId:"noMatch",data:{folder:n,namingPattern:i}})}}})};const Z={"filename-blocklist":w,"filename-naming-convention":L,"folder-match-with-fex":F,"folder-naming-convention":N,"no-index":{meta:{type:"layout",docs:{description:'A file cannot be named "index"',category:"Layout & Formatting",recommended:!1,url:s("no-index")},fixable:null,schema:[{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"}}}],messages:{noIndex:'The filename "index" is not allowed'}},create:e=>({Program:t=>{const{ignoreMiddleExtensions:n}=e.options[0]||{},a=A(e),o=h(a);"index"!==y(o,n)||e.report({node:t,messageId:"noIndex"})}})}},R={meta:{name:"eslint-plugin-check-file",version:"2.8.0"},rules:Z};export{R as default,Z as rules};
