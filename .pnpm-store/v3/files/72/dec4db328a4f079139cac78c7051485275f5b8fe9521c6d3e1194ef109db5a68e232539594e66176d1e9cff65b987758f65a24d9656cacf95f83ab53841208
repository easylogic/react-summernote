{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D;;;;;;;;GAQG;AAEH,uDAAgF;AAA7C,oHAAA,gBAAgB,OAAA;AACnD,mEAAkG;AAAzD,gIAAA,sBAAsB,OAAA;AAE/D,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,iFAGyC;AADvC,8IAAA,6BAA6B,OAAA;AAE/B,mDAAyE;AAAhE,uHAAA,qBAAqB,OAAA;AAAE,gHAAA,cAAc,OAAA;AAC9C,uEAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AACjC,yDAAmF;AAA/C,sHAAA,iBAAiB,OAAA;AACrD,2DAAuF;AAAlD,yHAAA,mBAAmB,OAAA;AACxD,qDAA6E;AAA3C,kHAAA,eAAe,OAAA;AACjD,iDAAgD;AAAvC,8GAAA,aAAa,OAAA;AACtB,yDAAmF;AAA/C,sHAAA,iBAAiB,OAAA;AACrD,uDAAgF;AAA7C,oHAAA,gBAAgB,OAAA;AACnD,+CAAiE;AAArC,4GAAA,YAAY,OAAA;AACxC,iEAA+F;AAAvD,8HAAA,qBAAqB,OAAA;AAC7D,2CAA6E;AAApE,wGAAA,UAAU,OAAA;AAEnB,uCAAsC;AAA7B,oGAAA,QAAQ,OAAA;AACjB,uCAAsC;AAA7B,oGAAA,QAAQ,OAAA;AACjB,yDAAkF;AAAtD,6HAAA,wBAAwB,OAAA;AACpD,qEAAqG;AAA5F,kIAAA,uBAAuB,OAAA;AAChC,+EAA0G;AAAjG,4IAAA,4BAA4B,OAAA;AACrC,6EAMuC;AALrC,0IAAA,2BAA2B,OAAA;AAM7B,mEAAkG;AAAzF,gIAAA,sBAAsB,OAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * This library implements a system for processing human readable text that\n * will be output by console applications.\n *\n * @remarks\n * See the {@link TerminalWritable} documentation for an overview of the major concepts.\n *\n * @packageDocumentation\n */\n\nexport { ICallbackWritableOptions, CallbackWritable } from './CallbackWritable';\nexport { IDiscardStdoutTransformOptions, DiscardStdoutTransform } from './DiscardStdoutTransform';\nexport { TerminalChunkKind, ITerminalChunk } from './ITerminalChunk';\nexport { MockWritable } from './MockWritable';\nexport {\n  INormalizeNewlinesTextRewriterOptions,\n  NormalizeNewlinesTextRewriter\n} from './NormalizeNewlinesTextRewriter';\nexport { DEFAULT_CONSOLE_WIDTH, PrintUtilities } from './PrintUtilities';\nexport { RemoveColorsTextRewriter } from './RemoveColorsTextRewriter';\nexport { ISplitterTransformOptions, SplitterTransform } from './SplitterTransform';\nexport { IStdioLineTransformOptions, StderrLineTransform } from './StdioLineTransform';\nexport { IStdioSummarizerOptions, StdioSummarizer } from './StdioSummarizer';\nexport { StdioWritable } from './StdioWritable';\nexport { ITerminalTransformOptions, TerminalTransform } from './TerminalTransform';\nexport { ITerminalWritableOptions, TerminalWritable } from './TerminalWritable';\nexport { TextRewriterState, TextRewriter } from './TextRewriter';\nexport { ITextRewriterTransformOptions, TextRewriterTransform } from './TextRewriterTransform';\nexport { AnsiEscape, IAnsiEscapeConvertForTestsOptions } from './AnsiEscape';\nexport { ITerminal, TerminalWriteParameters, ITerminalWriteOptions } from './ITerminal';\nexport { Terminal } from './Terminal';\nexport { Colorize } from './Colorize';\nexport { ITerminalProvider, TerminalProviderSeverity } from './ITerminalProvider';\nexport { ConsoleTerminalProvider, IConsoleTerminalProviderOptions } from './ConsoleTerminalProvider';\nexport { StringBufferTerminalProvider, IStringBufferOutputOptions } from './StringBufferTerminalProvider';\nexport {\n  PrefixProxyTerminalProvider,\n  IPrefixProxyTerminalProviderOptions,\n  IDynamicPrefixProxyTerminalProviderOptions,\n  IPrefixProxyTerminalProviderOptionsBase,\n  IStaticPrefixProxyTerminalProviderOptions\n} from './PrefixProxyTerminalProvider';\nexport { TerminalStreamWritable, ITerminalStreamWritableOptions } from './TerminalStreamWritable';\n"]}