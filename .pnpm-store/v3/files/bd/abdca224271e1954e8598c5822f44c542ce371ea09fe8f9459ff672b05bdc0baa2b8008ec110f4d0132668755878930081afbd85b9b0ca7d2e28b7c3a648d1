"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var migrate_to_test_package_exports={};__export(migrate_to_test_package_exports,{default:()=>transform,parser:()=>parser});module.exports=__toCommonJS(migrate_to_test_package_exports);var import_csf_tools=require("@storybook/core/csf-tools"),babel=__toESM(require("@babel/core")),t=__toESM(require("@babel/types")),import_prettier=__toESM(require("prettier"));async function transform(info){let csf=(0,import_csf_tools.loadCsf)(info.source,{makeTitle:title=>title}),fileNode=csf._ast;new babel.File({filename:info.path},{code:info.source,ast:fileNode}).path.traverse({ImportDeclaration:path=>{(path.node.source.value==="@storybook/jest"||path.node.source.value==="@storybook/testing-library")&&(path.node.source.value==="@storybook/jest"&&path.get("specifiers").forEach(specifier=>{if(specifier.isImportSpecifier()){let imported=specifier.get("imported");if(!imported.isIdentifier())return;imported.node.name==="jest"&&(specifier.remove(),path.insertAfter(t.importDeclaration([t.importNamespaceSpecifier(t.identifier("test"))],t.stringLiteral("@storybook/test"))))}}),path.get("source").replaceWith(t.stringLiteral("@storybook/test")))},Identifier:path=>{path.node.name==="jest"&&path.replaceWith(t.identifier("test"))}});let output=(0,import_csf_tools.printCsf)(csf).code;try{output=await import_prettier.default.format(output,{...await import_prettier.default.resolveConfig(info.path),filepath:info.path})}catch{console.warn(`Failed applying prettier to ${info.path}.`)}return output}var parser="tsx";0&&(module.exports={parser});
